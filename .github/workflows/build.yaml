name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*'

jobs:
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - id: bun
        name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - name: Install Dependencies and Build
        run: |
          bun install
          bun run build
          chmod +x dist/index.js
      - id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: eslym/discord-guardbot
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern=v{{version}}
          labels: |
            maintainer=eslym
            org.opencontainers.image.authors=eslym
            org.opencontainers.image.title=Discord Guard Bot
            org.opencontainers.image.description=Discord Guard Bot
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.bun.outputs.bun-version }}
            org.opencontainers.image.version=${{ steps.bun.outputs.bun-version }}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            BUN_VERSION=${{ steps.bun.outputs.bun-version }}
